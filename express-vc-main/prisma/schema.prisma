generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

// local dev with mysql
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// vercel deploy with postgresql
// datasource db {
//   provider  = "postgresql"
//   url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

//以下為會員部分
model User {
  id             Int           @id @default(autoincrement())
  username       String
  password       String
  email          String        @unique
  sex            String?
  phone          String?
  postcode       String?
  city           String?
  district       String?
  address        String?
  // 關聯 User:Profile = 1:1 
  emailValidated Boolean       @default(false) @map("email_validated")
  googleUid      String?       @unique @map("google_uid")
  avatar         String?
  failedAttempts Int           @default(0) @map("failed_attempts")
  isLocked       Boolean       @default(false) @map("is_locked")
  lockUntil      DateTime?     @map("lock_until")
  // 關聯: User:Product = n:m 透過 Favorite
  favorite       favorite[]
  usercoupons    UserCoupons[]
  @@map("user")
}

model favorite {
  // 關聯: User:userLike = 1:n 
  user         User   @relation(fields: [userId], references: [id])
  userId       Int    @map("user_id")
  // 關聯: Product:userLike = 1:n 
  // product   Product @relation(fields: [productSkuId], references: [id])
  productSkuId String @map("product_sku_id") @db.VarChar(20)

  // 複合主鍵
  @@id([userId, productSkuId])
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  hash      String?
  createdAt DateTime @default(now()) @map("created_at")
  expiredAt DateTime @map("expired_at")
}

/// 以下為product相關資料表定義
model Brand {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("brand")
}

model Color {
  id             Int    @id @default(autoincrement())
  name           String @db.VarChar(50)
  colorImage     String @map("color_image") @db.VarChar(150)
  colorPaletteId Int    @map("color_palette_id")

  @@map("color")
}

model ColorPalette {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(50)
  cname String @db.VarChar(50)

  @@map("color_palette")
}

model Image {
  id           Int    @id @default(autoincrement())
  productSkuId String @map("product_sku_id") @db.VarChar(20)
  name         String @db.VarChar(150)
  image        String @db.VarChar(300)
  sortOrder    Int    @map("sort_order")

  @@map("image")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  brandId       Int      @map("brand_id")
  discription   String   @db.Text
  price         Int      @default(0)
  discountPrice Int?     @map("discount_price")
  createdAt     DateTime @default(now()) @map("created_at")
  // favorite      favorite[]

  @@map("product")
}

model ProductSku {
  // id        Int    @id @default(autoincrement())
  //id 改為1-1, 1-2, 1-3 (productId-colorId)
  id        String @id @db.VarChar(20)
  productId Int    @map("product_id")
  name      String @db.VarChar(100)
  colorId   Int    @map("color_id")
  stock     Int    @default(0)

  @@map("product_sku")
}

model Spec {
  // id        Int    @id @default(autoincrement())
  productId    Int     @id @map("product_id")
  name         String  @db.VarChar(100)
  neckPickup   String? @map("neck_pickup") @db.VarChar(100)
  middlePickup String? @map("middle_pickup") @db.VarChar(100)
  bridgePickup String? @map("bridge_pickup") @db.VarChar(100)
  controls     String? @db.VarChar(300)
  switching    String? @db.VarChar(300)

  @@map("spec")
}

// 問題:開啟關聯部分無法寫入資料
model Coupon {
  id          Int           @id @default(autoincrement())
  name        String
  code        String?       @unique // 優惠券代碼 (例如：SUMMER20)
  typeId      Int //type fk
  type        CouponType    @relation(fields: [typeId], references: [id]) // 優惠券類型 (關係)
  discount    Int // 折扣金額或百分比 (根據 discount_type 決定)
  minPurchase Decimal? //最低消費金額
  description String? // 優惠券描述 (nullable)
  startTime   DateTime
  endTime     DateTime
  isDelete    Boolean       @default(false)
  usercoupons UserCoupons[]

  @@index([code]) // 建立 code 索引
}

model CouponType {
  id          Int           @id @default(autoincrement())
  category    String
  name        String
  coupon      Coupon[]
  userCoupons UserCoupons[]
}

model UserCoupons {
  id           Int        @id @default(autoincrement())
  userId       Int
  user         User       @relation(fields: [userId], references: [id])
  couponId     Int
  coupon       Coupon     @relation(fields: [couponId], references: [id])
  couponTypeId Int
  couponType   CouponType @relation(fields: [couponTypeId], references: [id])
  claimed      Boolean    @default(true)
  isDelete     Boolean    @default(false)

  @@index([couponId])
  @@index([userId])
  @@index([couponTypeId])
}

/**
 * Activity box Start
 */

model Activity {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  // 活動類別 n:1
  category_id    Int              @map("category_id")
  category       ActivityCategory @relation(fields: [category_id], references: [id])
  // 音樂類別 n:1
  music_genre_id Int
  genre          ActivityGenre    @relation(fields: [music_genre_id], references: [id])
  date_start     DateTime
  date_end       DateTime?
  signup_start   DateTime?
  signup_end     DateTime?
  city           String           @db.VarChar(255)
  dist           String           @db.VarChar(255)
  address        String           @db.VarChar(255)
  zipcode        Int
  intro          String           @db.Text
  media          String           @db.Text // 多個照片路徑

  // 1:n
  lineup  ActivityLineup[]
  article ActivityArticle[]
  type    ActivityTicketType[]
}

model ActivityCategory {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  activities Activity[]
}

model ActivityGenre {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  activities Activity[]
}

model ActivityLineup {
  id          Int      @id @default(autoincrement())
  activity_id Int
  activity    Activity @relation(fields: [activity_id], references: [id])
  bands       String   @db.VarChar(255)
}

model ActivityArticle {
  id          Int      @id @default(autoincrement())
  activity_id Int
  activity    Activity @relation(fields: [activity_id], references: [id])
  title       String   @db.VarChar(255)
  content     String   @db.Text
  images      String?   @db.Text // 多個照片路徑
}

model ActivityTicketType {
  id          Int      @id @default(autoincrement())
  activity_id Int
  name        String   @db.VarChar(255)
  stock       Int
  price       Int
  activity    Activity @relation(fields: [activity_id], references: [id])
}

/**
 * Activity box End
 */

model MyOrder {
  id              Int      @id @default(autoincrement()) // 訂單唯一識別碼，自動遞增
  userId          Int?
  orderNumber     String   @unique
  recipient       String
  phone           String
  email           String
  shippingAddress String // 配送地址，儲存訂單的配送地址
  shippingMethod  String
  paymentMethod   String
  cost            String
  coupon          String
  totalAmount     String
  createdAt       DateTime @default(now()) // 訂單創建時間
}

model MyOrderItem {
  id       Int     @id @default(autoincrement()) // 訂單唯一識別碼，自動遞增
  orderId  Int
  name     String
  rentDate String?
  color    String?
  brand    String?
  status   String?
  image    String
  price    String
  count    String
  total    String
}

model Rent {
  id          Int             @id @default(autoincrement())
  name        String
  level       Int
  description String?
  rentBrandId Int?
  rentBrand   RentBrand?      @relation(fields: [rentBrandId], references: [id])
  rentColors  RentItemColor[]
  stores_id   Int?
  stores      Stores?         @relation(fields: [stores_id], references: [id])
  price       Int             @default(0)
  RentList_id Int?
  RentList    RentList?       @relation(fields: [RentList_id], references: [id])
  time_start  DateTime?
  time_end    DateTime?
  created_at  DateTime        @default(now())
  // OrderItem   OrderItem[]
}

model RentBrand {
  id    Int    @id @default(autoincrement())
  name  String
  rents Rent[] // 一個品牌可以有多個租賃物品
}

model RentColor {
  id         Int    @id @default(autoincrement())
  name       String @db.VarChar(50)
  colorImage String @map("rentColor_image") @db.VarChar(150)
}

model RentItemColor {
  id      String @id @db.VarChar(20)
  rentId  Int
  name    String @db.VarChar(100)
  colorId Int    @map("RentColor_id")
  stock   Int    @default(0)
  Rent    Rent   @relation(fields: [rentId], references: [id])
}

model RentList {
  id           Int     @id @default(autoincrement())
  rentId       Int
  name         String  @db.VarChar(100)
  neckPickup   String? @map("neck_pickup") @db.VarChar(100)
  middlePickup String? @map("middle_pickup") @db.VarChar(100)
  bridgePickup String? @map("bridge_pickup") @db.VarChar(100)
  controls     String? @db.VarChar(300)
  switching    String? @db.VarChar(300)
  rents        Rent[]
}

model RentImges {
  id              Int    @id @default(autoincrement())
  RentItemColorId String @db.VarChar(20)
  name            String @db.VarChar(150)
  image           String @db.VarChar(300)
  sortOrder       Int    @map("sort_order")
}

model Stores {
  id            Int    @id @default(autoincrement())
  name          String @unique
  address       String @unique
  address_phone String @default("")
  rents         Rent[] // 關聯到 Rent 表
}
